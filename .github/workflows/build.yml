name: build

on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
  pull_request:

jobs:
  build-macos:
    strategy:
      fail-fast: false
      matrix:
        name:
          - macos-x86_64
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build
        run: make -C build USE_CCACHE=0 ${{ matrix.name }}
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: libwebrtc-${{ matrix.name }}.tar.xz
          path: package/libwebrtc-${{ matrix.name }}.tar.xz

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Disk Cleanup
        run: .\disk_cleanup.bat
      - name: Build
        run: .\build.windows.bat
      - name: Upload artifact x64
        uses: actions/upload-artifact@v1
        with:
          name: libwebrtc-win-x64.7z
          path: package/libwebrtc-win-x64.7z
      - name: Upload artifact x86
        uses: actions/upload-artifact@v1
        with:
          name: libwebrtc-win-x86.7z
          path: package/libwebrtc-win-x86.7z

  setup-release:
    name: Setup release
    if: contains(github.ref, 'tags/')
    needs:
      - build-macos
      - build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_PERSONAL_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release m${{ github.ref }}
          draft: false
          prerelease: false
      - name: Get url to upload to release from output
        env:
          url: ${{ steps.create_release.outputs.upload_url }}
        run: |
          mkdir artifact
          echo $url > artifact/url.txt
      - name: Upload artifact to share url with other jobs
        uses: actions/upload-artifact@v1
        with:
          name: artifact
          path: artifact/url.txt

  release:
    strategy:
      fail-fast: false
      matrix:
        name:
          - macos-arm64
          - macos-x86_64
          - android
          - win-x64
          - win-x86
        include:
          - name: linux-arm
            ext: tar.xz
            filename: libwebrtc-linux-arm.tar.xz
            type: application/x-xz
          - name: linux-arm64
            ext: tar.xz
            filename: libwebrtc-linux-arm64.tar.xz
            type: application/x-xz
          - name: linux-x64
            ext: tar.xz
            filename: libwebrtc-linux-x64.tar.xz
            type: application/x-xz
          - name: macos-arm64
            ext: tar.xz
            filename: libwebrtc-macos-arm64.tar.xz
            type: application/x-xz
          - name: macos-x64
            ext: tar.xz
            filename: libwebrtc-macos-x64.tar.xz
            type: application/x-xz
          - name: android
            ext: tar.xz
            filename: libwebrtc-android.tar.xz
            type: application/x-xz
          - name: ios
            ext: zip
            filename: WebRTC.framework.zip
            type: application/zip
          - name: win-x64
            ext: 7z
            filename: libwebrtc-win-x64.7z
            type: application/x-7z-compressed
          - name: win-x86
            ext: 7z
            filename: libwebrtc-win-x86.7z
            type: application/x-7z-compressed
    name: Release ${{ matrix.name }}
    needs:
      - setup-release
    runs-on: ubuntu-latest
    steps:
      - name: Download ${{ matrix.name }}
        uses: actions/download-artifact@v1
        with:
          name: libwebrtc-${{ matrix.name }}.${{ matrix.ext }}
      - name: Download artifact to get url to upload to release
        uses: actions/download-artifact@v1
        with:
          name: artifact
      - name: Get url to upload to release from artifact
        id: get_url
        run: |
          url=$(cat artifact/url.txt)
          echo "##[set-output name=upload_url;]$url"
      - name: Upload ${{ matrix.name }} Release asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_PERSONAL_TOKEN }}
        with:
          upload_url: ${{ steps.get_url.outputs.upload_url }}
          asset_path: libwebrtc-${{ matrix.name }}.${{ matrix.ext }}/libwebrtc-${{ matrix.name }}.${{ matrix.ext }}
          asset_name: ${{ matrix.filename }}
          asset_content_type: ${{ matrix.type }}

